<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kiyeon&#39;s Blog</title>
    <link>http://blog.kiyeon.net/</link>
    <description>Recent content on Kiyeon&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Thu, 22 Feb 2018 16:37:26 +0900</lastBuildDate>
    
	<atom:link href="http://blog.kiyeon.net/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>SSH 자동 로그인</title>
      <link>http://blog.kiyeon.net/2018/02/22/ssh-autologin/</link>
      <pubDate>Thu, 22 Feb 2018 16:37:26 +0900</pubDate>
      
      <guid>http://blog.kiyeon.net/2018/02/22/ssh-autologin/</guid>
      <description>ssh 접속시 password 입력없이 자동으로 로그인하는 방법이다.
SSH Key 만들기 ssh 자동 로그인은 공개키, 비공개키를 사용한다. 키를 생성하자.
키파일명과 키파일을 어느 폴더에 만들지, 비공개키를 암호활지를 물어본다. 암호화를 하면 로그인시마다 비밀번호를 물어보기 때문에 자동로그인의 의미가 없다. 모두 Enter를 하여 넘어가면 키가 생성된다.
$ ssh-keygen -t rsa Generating public/private rsa key pair. Enter file in which to save the key (/home/user/.ssh/id_rsa): Created directory &#39;/home/user/.ssh&#39;. Enter passphrase (empty for no passphrase): Enter same passphrase again: Your identification has been saved in /home/user/.</description>
    </item>
    
    <item>
      <title>HTTPS 사용하기</title>
      <link>http://blog.kiyeon.net/2018/02/17/https/</link>
      <pubDate>Sat, 17 Feb 2018 20:41:26 +0900</pubDate>
      
      <guid>http://blog.kiyeon.net/2018/02/17/https/</guid>
      <description>보안을 위해 웹에서도 https를 사용하는 추세다. openssl로 사설인증서를 만들어 간단하게 적용할 수도 있지만 브라우저에의해 신뢰할 수 없는 SSL 인증서를 사용함으로써 기본적으로 차단된다. 그러므로 개발용이 아닌 서비스용으로 https를 사용하기 위해서는 공인된 인증기관에서 SSL을 구매하거나 무료 SSL 발급서비스를 사용할 수 있다.
 SSL 인증서는 글로벌 인증 기관에서 도메인을 특정하여 발행하는 민간 인증 회사입니다. 여러분의 웹 사이트에 인증서를 취득하고자 할 경우, 인증 회사(Certificate Authority)는 해당 도메인 소유 확인 책임을 담당합니다. 그리고, 일정 기간 유효한 인증서를 발급하고 특정 도메인의 웹 사이트 암호화를 보장합니다.</description>
    </item>
    
    <item>
      <title>Altibase</title>
      <link>http://blog.kiyeon.net/2018/01/31/altibase/</link>
      <pubDate>Wed, 31 Jan 2018 16:08:44 +0900</pubDate>
      
      <guid>http://blog.kiyeon.net/2018/01/31/altibase/</guid>
      <description>알티베이스는 알티베이스사에서 제작한 한국산 데이터베이스 관리 시스템이다. 알티베이스 버전3까지는 순수한 인메모리 DBMS만 지원을 하였으나, 알티베이스 버전4부터는 인메모리 DBMS와 온디스크 DBMS를 동시에 지원하는 하이브리드 형태의 DBMS로 변경되었다. 알티베이스 버전 6부터는 제품명이 &amp;ldquo;Altibase HDB&amp;rdquo;로 변경되었는데, &amp;ldquo;HDB&amp;rdquo;는 하이브리드 DBMS의 약자이다. 알티베이스 버전7부터는 샤딩 기술이 적용되었다.
  Altibase 가이드 Altibase Manuals  암호화 알티베이스에서 몇가지 암호화 함수를 제공한다. 다른 RDBMS의 암호화 함수는 암호화할 값을 넘기면 자동으로 암호화해주는데 반해 알티베이스 암호화함수는 사용하기가 조금 까다롭다.</description>
    </item>
    
    <item>
      <title>터미널 화면 정리</title>
      <link>http://blog.kiyeon.net/2018/01/10/cleanup-terminal-screen/</link>
      <pubDate>Wed, 10 Jan 2018 15:33:26 +0900</pubDate>
      
      <guid>http://blog.kiyeon.net/2018/01/10/cleanup-terminal-screen/</guid>
      <description>커서 숨기기
$ setterm -cursor off $ setterm -cursor on  :)</description>
    </item>
    
    <item>
      <title>CRLF</title>
      <link>http://blog.kiyeon.net/2017/12/12/crlf/</link>
      <pubDate>Tue, 12 Dec 2017 10:46:46 +0900</pubDate>
      
      <guid>http://blog.kiyeon.net/2017/12/12/crlf/</guid>
      <description>CRLF는 새줄 문자를 말한다. New Line, Line Break, Line Separators, EOL(End-Of-Line)라고도 한다.
CR(Carrige Return)
 현재 라인에서 캐리지(커서)를 제일 앞으로 이동하는 동작 아스키(13, 0x0D), \r  LF(Line Feed)
 종이를 한 라인 위로 올리는 동작 아스키(10, 0x0A), \n  운영체제별 줄바꿈 문자 OS별로 줄바꿈 문자가 다르다.
 역사
ISO와 ASA(ANSI의 전신)는 동시에 ASCII를 개발했다. 1963년부터 1968년까지 ISO 초안은 CR+LF와 LF를 새줄 문자로 정했다. ASA의 초안은 CR+LF만 지원했다. CR+LF는 텔레타이프, ASR33을 콘솔 장치로 사용한 초기 컴퓨터 시스템에서 널리 쓰였다.</description>
    </item>
    
    <item>
      <title>Diamond Ring</title>
      <link>http://blog.kiyeon.net/2017/12/09/diamond-ring/</link>
      <pubDate>Sat, 09 Dec 2017 22:24:28 +0900</pubDate>
      
      <guid>http://blog.kiyeon.net/2017/12/09/diamond-ring/</guid>
      <description>    
0.70 Carat Round Brilliant Diamond Ring 1 Carat Round Brilliant Diamond Ring
 진정한 공주풍 다이아몬드반지, 프린세스컷 다이아몬드  </description>
    </item>
    
    <item>
      <title>윈도우 CLI를 *NIX CLI처럼 만들기</title>
      <link>http://blog.kiyeon.net/2017/12/06/nix-for-windows/</link>
      <pubDate>Wed, 06 Dec 2017 09:44:54 +0900</pubDate>
      
      <guid>http://blog.kiyeon.net/2017/12/06/nix-for-windows/</guid>
      <description> *nix환경의 CLI에 익숙하다보니 Windows의 CLI가 굉장히 어색하고 불편하다. Windows를 *nix화 해주는 툴들을 알아본다.
Babun MinGW </description>
    </item>
    
    <item>
      <title>터미널 컬러</title>
      <link>http://blog.kiyeon.net/2017/12/04/color-in-terminal/</link>
      <pubDate>Mon, 04 Dec 2017 16:24:54 +0900</pubDate>
      
      <guid>http://blog.kiyeon.net/2017/12/04/color-in-terminal/</guid>
      <description>검정바탕에 하얀 텍스트 딱딱한 터미널 화면에 컬러를 넣어보자. 시작하기 전에 헷갈리는 용어부터 정리해보자.
용어 콘솔(Console)
콘솔과 터미널이 굉장히 헷갈린다. 콘솔이나 터미널이나 결국 입출력을 담당하는 곳이라서 그런거 같다. 가장 큰 차이는 콘솔은 서버에 직접 연결되어있는 하드웨어이고 터미널은 콘솔을 가상화한 소프트웨어로 로컬이나(GUI환경) 원격 제어를 위해 사용된다. 그외엔 거의 같다고 보면 되겠다.
 가상콘솔(Virtual Console) : 리눅스에서 시스템을 관리하다 보면 콘솔에서만 수행할 수 있는 작업들이 존재하기 때문에 콘솔 화면 1개만으로는 여러 개의 작업을 하기에 불편함이 있다.</description>
    </item>
    
    <item>
      <title>Linux Timezone 변경 &amp; 시간 설정</title>
      <link>http://blog.kiyeon.net/2017/12/01/linux-timezone/</link>
      <pubDate>Fri, 01 Dec 2017 14:23:26 +0900</pubDate>
      
      <guid>http://blog.kiyeon.net/2017/12/01/linux-timezone/</guid>
      <description>우분투 기준 타임존 변경하는 방법과 시간 설정 방법이다.
Timezone 변경하기 date를 해보면 UTC1로 시간이 표시된다.
$ date Fri Dec 1 05:25:04 UTC 2017  tzselect tzselect를 사용해 TZ format을 알아볼 수 있고 이 값으로 Local Timezone을 변경할 수 있다. 이 방법은 로컬에만 적용된다.
$ tzselect Please identify a location so that time zone rules can be set correctly. Please select a continent, ocean, &amp;quot;coord&amp;quot;, or &amp;quot;TZ&amp;quot;. 1) Africa 2) Americas 3) Antarctica 4) Asia 5) Atlantic Ocean 6) Australia 7) Europe 8) Indian Ocean 9) Pacific Ocean 10) coord - I want to use geographical coordinates.</description>
    </item>
    
    <item>
      <title>Windows용 Console</title>
      <link>http://blog.kiyeon.net/2017/11/29/console-for-windows/</link>
      <pubDate>Wed, 29 Nov 2017 15:43:25 +0900</pubDate>
      
      <guid>http://blog.kiyeon.net/2017/11/29/console-for-windows/</guid>
      <description>Windows에 기본으로 제공하는 콘솔앱인 &amp;lsquo;cmd&amp;rsquo;는 사용이 불편하다. cmd를 대체할만한 툴 알아봤다.
ConsoleZ ConsoleZ는 Console에서 fork되어 개선된 콘솔앱이다. 멀티탭과 화면분할, 각 화면별 백그라운드 스타일 지정등 다양한 기능을 제공하는데 macOS의 iTerm2와 비슷한 느낌을 준다.
ConsoleZ 설치하기 Scoop을 사용하여 설치한다.
scoop search consolez
C:\Users\Administrator&amp;gt;scoop search consolez Results from other known buckets... (add them using &#39;scoop bucket add &amp;lt;name&amp;gt;&#39;) &#39;extras&#39; bucket: consolez  scoop bucket add extras
C:\Users\Administrator&amp;gt;scoop bucket add extras Git is required for buckets.</description>
    </item>
    
    <item>
      <title>플랫폼별 패키지 메니저(Platform Package Manager)</title>
      <link>http://blog.kiyeon.net/2017/11/28/platform-package-manager/</link>
      <pubDate>Tue, 28 Nov 2017 17:23:22 +0900</pubDate>
      
      <guid>http://blog.kiyeon.net/2017/11/28/platform-package-manager/</guid>
      <description>macOS Homebrew
Linux Linuxbrew
Windows Scoop 설치 Scoop을 설치하려면 Powershell3가 설치되어있어야 한다.
powershell에서 다음을 입력한다.
iex (new-object net.webclient).downloadstring(&#39;https://get.scoop.sh&#39;)  다음과 같이 실행 규칙을 변경해야 한단다
PowerShell requires an execution policy of &#39;RemoteSigned&#39; to run Scoop. To make this change please run: &#39;Set-ExecutionPolicy RemoteSigned -scope CurrentUser&#39;  실행 규칙을 변경하고 다시 scoop을 설치한다.
실행 규칙 변경 실행 정책은 신뢰하지 않는 스크립트로부터 사용자를 보호합니다. 실행 정책을 변경하면 about_Execution_Policies 도움말 항목(http://technet.microsoft.com/ko-kr/library/dd347641.aspx)에 설명된 보안 위험에 노출될 수 있습니다.</description>
    </item>
    
    <item>
      <title>AWS EC2 SSH 접속</title>
      <link>http://blog.kiyeon.net/2017/11/28/connecting-aws-ec2-by-ssh/</link>
      <pubDate>Tue, 28 Nov 2017 11:25:55 +0900</pubDate>
      
      <guid>http://blog.kiyeon.net/2017/11/28/connecting-aws-ec2-by-ssh/</guid>
      <description>AWS EC2에 새로운 인스턴스를 생성한후 SSH 접속하는 방법이다.
Key Pair 사용 접속 인스턴스 생성 마지막단계에서 Key Pair를 생성할것인지 묻는다.
 키 페어는 AWS에 저장하는 퍼블릭 키와 사용자가 저장하는 프라이빗 키 파일로 구성됩니다. 이 둘을 모두 사용하여 SSH를 통해 인스턴스에 안전하게 접속할 수 있습니다. Windows AMI의 경우 인스턴스에 로그인하는 데 사용되는 암호를 얻으려면 프라이빗 키 파일이 필요합니다. Linux AMI의 경우, 프라이빗 키 파일을 사용하면 인스턴스에 안전하게 SSH로 연결할 수 있습니다.</description>
    </item>
    
    <item>
      <title>Gulp</title>
      <link>http://blog.kiyeon.net/2017/11/27/gulp/</link>
      <pubDate>Sun, 26 Nov 2017 20:21:06 +0900</pubDate>
      
      <guid>http://blog.kiyeon.net/2017/11/27/gulp/</guid>
      <description>sturobson/gulpfile.js gulp입문 Gulp에 대한 소개 JavaScript빌드 자동화툴 알아보기 + ES6문법으로 사용해보기 Automate Your Tasks Easily with Gulp.js npm trends  References  Grunt and Gulp, Build your project Build Wars: Gulp vs Grunt - 이 프리젠테이션을 보면 grunt가 꾀나 혁신적인 빌드 툴이였다는걸 얘기하지만 시간이 지나고 프로젝트 규모가 커질수록 제대로 빌드가 되지 않는 소규모 프로젝트를 위해 디자인된 디자인 툴이라는 점과 이 프로젝트의 업데이트가 더디게 이루어지고 있음을 말한다.(마지막 릴리즈가 Feb 2013) 프론트엔드 빌드도구 Gulp 에 대해서 알아봅시다.</description>
    </item>
    
    <item>
      <title>키보드로 아이폰 제어</title>
      <link>http://blog.kiyeon.net/2017/11/20/controling-iphone-by-keyboard/</link>
      <pubDate>Mon, 20 Nov 2017 14:15:59 +0900</pubDate>
      
      <guid>http://blog.kiyeon.net/2017/11/20/controling-iphone-by-keyboard/</guid>
      <description>현재 iPhone6를 사용중이다. 원래 6s를 사용했는데 잃어버리고 중고로 얻은 폰인데 베터리가 심하게 빨리 없어진다. 완충후 출근하면 60%가 남아있다. 하루종일 충전을 하고 있어야 한다. 게다가 화면 오른쪽에 세로방향으로 4갈래 라인이 생겼는데 그 부분은 터치가 되지 않는다. 가로, 세로모드 그리고 키보드를 좌측, 우측으로 옮겨가며 정말 힘겹게 사용하고 있다.
메시지를 주고받을때 타이핑하기가 굉장히 불편한데 그래서 대안으로 블루투스 키보드를 사용한다. 그런데 사용하다보니 불편한점이 있었다. 앱의 다른버튼을 선택하거나 화면을 전환하거나 할때 키보드만으로는 제어가 안되서 손가락을 이용해 터치가 필요했던 것이다.</description>
    </item>
    
    <item>
      <title>Oracle</title>
      <link>http://blog.kiyeon.net/2017/03/22/oracle/</link>
      <pubDate>Wed, 22 Mar 2017 17:14:44 +0900</pubDate>
      
      <guid>http://blog.kiyeon.net/2017/03/22/oracle/</guid>
      <description>RDBMS 오라클 유용한 팁모음
숫자에 comma 넣기 to_char(col,&amp;lsquo;Fm999,999,999,990&amp;rsquo;)
REGEXP_REPLACE
SELECT NO ,REVERSE(TO_CHAR(no)) AS REVERSE_NO ,REGEXP_REPLACE(REVERSE(REGEXP_REPLACE( REVERSE(TO_CHAR(no)), &#39;([0-9]{3})&#39;,&#39;\1,&#39;)), &#39;^,&#39;,&#39;&#39;) AS COMMA_NO FROM ( SELECT 123456789 AS no FROM dual ) V1 ; &amp;lt;&amp;lt;결과&amp;gt;&amp;gt; NO REVERSE_NO COMMA_NO --- ------------- ------------- 123456789 987654321 123,456,789  숫자+문자 조합문자열에서 문자만 추출하는법 문자로만 이루어진 문자열인지 확인
SELECT C FROM (SELECT &#39;ABCDE&#39; C FROM DUAL) WHERE TRANSLATE(C, &#39;0123456789&#39;, &#39;A&#39;) = C;  숫자로만 이루어진 문자열인지
SELECT C FROM (SELECT &#39;12345&#39; C FROM DUAL) WHERE TRANSLATE(C, &#39;0123456789&#39; || C, &#39;0123456789&#39;) = C;  숫자+문자 조합문자열에서 숫자만 추출</description>
    </item>
    
    <item>
      <title>macOS에 스타크래프트 설치하고 실행하기</title>
      <link>http://blog.kiyeon.net/2017/03/07/running-starcraft-on-macos/</link>
      <pubDate>Tue, 07 Mar 2017 19:00:13 +0900</pubDate>
      
      <guid>http://blog.kiyeon.net/2017/03/07/running-starcraft-on-macos/</guid>
      <description>&lt;p&gt;블리자드의 스타크래프트를 macOS(Sierra Version 10.12.3)에 설치하고 실행하는 방법이다.&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;과거 맥에 PowerPC를 사용할때는 &lt;a href=&#34;https://kr.battle.net/shop/ko/product/game/legacy-games&#34;&gt;블리자드에서 스타크래프트 맥버전을 지원&lt;/a&gt;했으나 &lt;a href=&#34;https://kr.battle.net/support/ko/article/starcraft-system-requirements&#34;&gt;PowerPC지원이 끊기면서 Windows 버전만 지원&lt;/a&gt;하게되어 많은 맥 유저들이 스타크래프트를 맥에서 실행하는 방법에 대한 글들이 많았지만 방법도 다양하고 보안상 위험해 보여 내가 직접 성공한 내용에 대해 기록해봤다.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MySql</title>
      <link>http://blog.kiyeon.net/2017/02/28/mysql/</link>
      <pubDate>Tue, 28 Feb 2017 17:14:44 +0900</pubDate>
      
      <guid>http://blog.kiyeon.net/2017/02/28/mysql/</guid>
      <description>사용자 생성 쿼리 CREATE DATABASE MYAPP; CREATE USER &#39;HOMESTEAD&#39; IDENTIFIED BY &#39;SECRET&#39;; GRANT ALL PRIVILEGES ON MYAPP.* TO &#39;HOMESTEAD&#39;; FLUSH PRIVILEGES;  테이블 생성 CREATE TABLE POSTS ( ID INT(11) UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY, TITLE VARCHAR(255), BODY TEXT ) ENGINE=INNODB DEFAULT CHARSET=UTF8 COLLATE=UTF8_UNICODE_CI; CREATE TABLE AUTHORS( ID INT(11) UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY , EMAIL VARCHAR(255) NOT NULL, PASSWORD VARCHAR(60) NOT NULL ) ENGINE=INNODB DEFAULT CHARSET=UTF8 COLLATE=UTF8_UNICODE_CI;  순위 구하기 MySQL에는 랭킹을 구하는 함수가 없어 꼼수를 사용해야 한다.</description>
    </item>
    
    <item>
      <title>HUGO</title>
      <link>http://blog.kiyeon.net/2017/02/13/hugo/</link>
      <pubDate>Mon, 13 Feb 2017 10:37:15 +0900</pubDate>
      
      <guid>http://blog.kiyeon.net/2017/02/13/hugo/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://gohugo.io/&#34;&gt;HUGO&lt;/a&gt;&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;는 &lt;a href=&#34;https://golang.org/&#34;&gt;Go언어&lt;/a&gt;로 만들어진 Octopress나 jekyll과 비슷한 &lt;a href=&#34;http://nilclass.com/courses/what-is-a-static-website/#1&#34;&gt;Static website&lt;/a&gt;(&lt;a href=&#34;https://en.wikipedia.org/wiki/Static_web_page&#34;&gt;wiki&lt;/a&gt;) generator 로 현재 Jekyll과 더불러 &lt;a href=&#34;https://www.staticgen.com/&#34;&gt;급속도로 인기를 얻고 있다&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hosts</title>
      <link>http://blog.kiyeon.net/2016/11/04/hosts/</link>
      <pubDate>Fri, 04 Nov 2016 13:00:02 +0900</pubDate>
      
      <guid>http://blog.kiyeon.net/2016/11/04/hosts/</guid>
      <description> 로컬에서 HOST파일을 수정하여 도메인에 매핑되는 IP주소를 수정할 수 있다. 제일 처음 도메인이 입력됐을때 로컬의 HOST파일을 참조하고 그 이후에는 DNS Server를 참조하여 IP주소를 찾아간다.
아래는 각 OS별 HOST 파일의 위치다.
Windows  win+r notepad c:\windows\system32\drivers\etc\hosts  Linux, UNIX, OSX  vi /etc/hosts  </description>
    </item>
    
    <item>
      <title>Toad for Oracle</title>
      <link>http://blog.kiyeon.net/2016/11/04/toad-for-oracle/</link>
      <pubDate>Fri, 04 Nov 2016 13:00:02 +0900</pubDate>
      
      <guid>http://blog.kiyeon.net/2016/11/04/toad-for-oracle/</guid>
      <description> SELECT문에서 컬럼값 직접 수정하기 이 내용은 Oracle에만 해당되며 Toad에서만 확인됐다.
테이블에 있는 데이터를 수정하려면 당연히 UPDATE문을 사용해야 한다. Toad에서는 조회시 rowid를 사용하면 &amp;lsquo;Data Grid&amp;rsquo;에서 바로 수정할 수 있다. 물론 수정후 Commit을 해줘야 한다.
SELECT ROWID, A.* FROM TABLE_NAME A;  </description>
    </item>
    
    <item>
      <title>데이터가 숫자인 문자형타입 컬럼 정렬방법</title>
      <link>http://blog.kiyeon.net/2016/11/04/order-by/</link>
      <pubDate>Fri, 04 Nov 2016 13:00:02 +0900</pubDate>
      
      <guid>http://blog.kiyeon.net/2016/11/04/order-by/</guid>
      <description>컬럼의 타입은 문자형이다. 문자형 타입에는 어떤 데이터값이라도 들어올 수 있다. 이런 컬럼으로 정렬(order by)를 하는 경우가 있는데 어떻게 보면 테이블 설계가 잘못 됐다고 볼 수 있다. 원래 해당 컬럼의 숫자데이터로 정렬할 목적이였다면 숫자타입으로 컬럼을 만들어야 한다. 이런 상황에서 정렬을 해보면 잘되는것 처럼 보이지만 10단위에서 문제가 생긴다. 즉 오름차순일 경우 아래와 같이 정렬된다.
1 10 2 26 276483 3 ...  숫자가 아닌 문자이기때문에 순서대로 정렬되지 않는다.
해결방법 Oracle ORDER BY TO_NUMBER(ORD)</description>
    </item>
    
    <item>
      <title>macOS에서의 rsync</title>
      <link>http://blog.kiyeon.net/2016/07/17/rsync-for-macos/</link>
      <pubDate>Sun, 17 Jul 2016 13:00:02 +0900</pubDate>
      
      <guid>http://blog.kiyeon.net/2016/07/17/rsync-for-macos/</guid>
      <description>macOS에서 rsync를 사용할때 싱크가 잘 맞지 않는 문제가 있다.
rsync -avh --progress --delete src dst  보통 위와 같이 사용하면 항상 싱크가 맞아야 한다. 하지만 맥에서 위와 같이 했을때 두가지 문제가 있었다. 1. 폴더아이콘과 태그가 복사되지 않는다. (-xrlptgoEvh 옵션으로 해결) 2. 한글로된 폴더는 &amp;ndash;delete 옵션이 먹지 않는다. (영문명은 잘됨)
1의 경우 -xrlptgoEvh 옵션을 사용하면 해결할 수 있다. OS X의 rsync는 애플이 리소스도 함께 rsync되도록 -E 옵션을 커스터마이징한거라고 한다.
2의 경우 OS X에서 내부적으로 사용하는 UTF-8-MAC 인코딩이 문제인거 같다.</description>
    </item>
    
    <item>
      <title>Jekyll</title>
      <link>http://blog.kiyeon.net/2016/02/10/jekyll/</link>
      <pubDate>Wed, 10 Feb 2016 14:28:00 +0900</pubDate>
      
      <guid>http://blog.kiyeon.net/2016/02/10/jekyll/</guid>
      <description> Link  Jekyll Wiki  Themes  지킬로 만들어진 사이트 jekyllbootstrap.com jekyllthemes.org  </description>
    </item>
    
    <item>
      <title>리눅스 패키지 설치하기</title>
      <link>http://blog.kiyeon.net/2015/12/04/installing-linux-package/</link>
      <pubDate>Fri, 04 Dec 2015 14:55:00 +0900</pubDate>
      
      <guid>http://blog.kiyeon.net/2015/12/04/installing-linux-package/</guid>
      <description>Ubuntu 기본 Something along the lines of:
dpkg &amp;ndash;&amp;gt; apt-get, aptitude &amp;ndash;&amp;gt; Synaptic, Software Center
최신 버전 설치  최신 패키지 검색
Ubuntu package building and hosting에서 최신 패키지를 검색한다. Binary packages built by this source에서 설치할 Binary package를 선택한다. Published versions에서 시스템에 맞는 버전을 선택한다.
ex) sqlite3 3.9.2-1(amd64 binary) in ubuntu xenial Downloadable files에서 deb파일을 다운로드 한다.
wget http://launchpadlibrarian.net/225502540/sqlite3_3.9.2-1_amd64.deb 다운로드한 deb을 설치한다.
sudo dpkg -i sqlite3_3.9.2-1_amd64.deb 의존성 관련 패키지가 필요하면 Package relationships에서 deb을 받아 설치한다.</description>
    </item>
    
    <item>
      <title>OCR</title>
      <link>http://blog.kiyeon.net/2015/12/02/ocr/</link>
      <pubDate>Wed, 02 Dec 2015 10:18:00 +0900</pubDate>
      
      <guid>http://blog.kiyeon.net/2015/12/02/ocr/</guid>
      <description> 광학 문자 인식(Optical character recognition; OCR)
Software  ABBYY FineReader - 문자 인식(OCR) 책 스캔 프로그램 추천 : 한글 영문 인식률 결과  Online OCR services  WeOCR CustomOCR Free OCR i2OCR  Open source  Tesseract - Tesseract Open Source OCR Engine (main repository)  3rdParty   </description>
    </item>
    
    <item>
      <title>AWS EBS 확장및 추가하기</title>
      <link>http://blog.kiyeon.net/2015/11/28/adding-and-expending-aws-ebs/</link>
      <pubDate>Sat, 28 Nov 2015 18:40:00 +0000</pubDate>
      
      <guid>http://blog.kiyeon.net/2015/11/28/adding-and-expending-aws-ebs/</guid>
      <description>AWS EC2의 디스크가 Full이 되어 확장이 필요했다.
볼륨 확장 Linux에서 EBS 볼륨의 스토리지 공간 확장
 인스턴스를 Stop 시킨다. EBS Volume을 찾아 Snapshopt을 만든다. (복사용) Snapshot에서 2에서 만든 스냅샷을 선택하여 새로운 볼륨을 만든다. 여기서 확장할 사이즈를 정한다. ex) 8GB -&amp;gt; 15GB, 볼륨이 커지면 비용이 발생하므로 SIMPLE MONTHLY CALCULATOR로 요금을 계산하자. 이전 볼륨을 분리(Detach Volume)하고 새로 만든 볼륨을 연결(Attach Volume)한다. 인스턴스를 다시 시작한다. 파일 시스템을 확장한다. 여기서부터는 Linux 파일 시스템 확장참조  볼륨 추가 인스턴스에 볼륨 추가</description>
    </item>
    
    <item>
      <title>LISP</title>
      <link>http://blog.kiyeon.net/2015/11/28/lisp/</link>
      <pubDate>Sat, 28 Nov 2015 01:51:00 +0900</pubDate>
      
      <guid>http://blog.kiyeon.net/2015/11/28/lisp/</guid>
      <description>LISP  표현 기능이 대단히 뛰어난 언어, 가장 복잡한 프로그래밍 아이디어를 명확하고 적절하게 표현할 수 있도록 설계. 많은 대기업이 핵심적인 업무에 리스프를 사용. 리스프는 작은 노력으로도 배울 수 있지만 컴퓨터 프로그래밍에 대해 깊은 통찰력을 갖게 한다. 확장성 있는 라이브러리를 비롯한 수많은 언어 기능을 지원하며 컴파일러/인터프리터를 무척 쉽게 수정할 수 있다. 리스프의 주된 원리를 따르는 모든 언어는 리스프의 변종이라 하고 그래서 리스프는 변종이 많다. 가장 많이 사용하는 리스프는 안시 커먼 리스프와 스킴 안시 커먼 리스프  1981년 많은 리스프 변종에 대응하고자 리스프 단체에서 커먼 리스프라는 리스프 명세서를 발표.</description>
    </item>
    
    <item>
      <title>Making &amp; Testing Multiboot USB</title>
      <link>http://blog.kiyeon.net/2015/11/10/testing-and-making-multi-booting-usb/</link>
      <pubDate>Tue, 10 Nov 2015 23:56:57 +0900</pubDate>
      
      <guid>http://blog.kiyeon.net/2015/11/10/testing-and-making-multi-booting-usb/</guid>
      <description>개요 요즘은 그렇지 않지만 예전에는 뭔가 OS를 설치할일이 많았다. 특히 Windows는 정기적으로 설치해야하는 일이 빈번했다.
Windows외에 테스트용 리눅스 서버나 복원용 툴, 고스트, 네트워크 모니터링을 위한 백트랙등 가끔씩 설치할일이 있는데 아무래도 USB로 설치하는게 간편하다. 원래는 부트영역에 한번에 하나만 설치가 가능하고 그래서 OS별로 USB를 준비하던가 그때마다 USB를 포맷하고 새로 설치하는 번거로움이 있다. 이번에 MLC 대용량 USB를 구입하면서 남는 용량이 아깝기도 하고 간혹가다 설치를 해줘야할 때도 있고해서 멀티부트 USB를 만들기로 했다.
준비물  USB YUMI OS Image File 가상머신 Tools(VMware, Parallels, Virtual Box &amp;hellip;) Plop Boot Manager  멀티부트 USB 만들기 멀티부트 디스크를 만드는 방법은 두가지가 있는데 첫번째는 직접 부트영역을 뜯어고치는 방법과(MBR, GRUB), 멀티부트를 만들어주는 유틸리티를 사용하는 것이다.</description>
    </item>
    
    <item>
      <title>Command line에서 java 작성하고 실행하기</title>
      <link>http://blog.kiyeon.net/2015/06/25/command-lineeseo-java-jagseonghago-silhaenghagi/</link>
      <pubDate>Thu, 25 Jun 2015 14:27:21 +0900</pubDate>
      
      <guid>http://blog.kiyeon.net/2015/06/25/command-lineeseo-java-jagseonghago-silhaenghagi/</guid>
      <description>&lt;p&gt;이상하게도 java는 이클립스가 없이는 사용하기가 힘들다. 이클립스에 너무 익숙해져서 그럴지도 모르겠다. 간단하게 command line상에서 java를 작성하고 컴파일하고 실행해보자.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Changing the shell prompt</title>
      <link>http://blog.kiyeon.net/2015/06/25/changing-the-shell-prompt/</link>
      <pubDate>Thu, 25 Jun 2015 10:33:58 +0900</pubDate>
      
      <guid>http://blog.kiyeon.net/2015/06/25/changing-the-shell-prompt/</guid>
      <description>쉘 프롬프트를 변경해보자. 여기서는 Bash를 기준으로 한다.
 Bash Prompt HOWTO 8 Useful and Interesting Bash Prompts What is your favorite Bash prompt? Status line in linux shell Crazy POWERFUL Bash Prompt  </description>
    </item>
    
    <item>
      <title>Change locale in linux</title>
      <link>http://blog.kiyeon.net/2015/06/24/change-locale-in-linux/</link>
      <pubDate>Wed, 24 Jun 2015 09:28:08 +0900</pubDate>
      
      <guid>http://blog.kiyeon.net/2015/06/24/change-locale-in-linux/</guid>
      <description>&lt;p&gt;Locale은 &lt;strong&gt;&amp;lsquo;지역, 언어&amp;rsquo;&lt;/strong&gt;정보로 프로그램은 입/출력시 사용자가 설정한 locale에 따라 인코딩을 적용하여 메세지를 출력한다.&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;h1 id=&#34;현재값&#34;&gt;현재값&lt;/h1&gt;

&lt;p&gt;현재 설정값을 보려면 &lt;strong&gt;&lt;a href=&#34;http://man.he.net/?topic=locale&amp;amp;section=all&#34;&gt;locale&lt;/a&gt;&lt;/strong&gt;을 사용한다.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;% locale
LANG=en_US.utf8                # LC_* 값들을 설정하지 않았을때 적용되는 기본 값
LANGUAGE=
LC_CTYPE=&amp;quot;en_US.utf8&amp;quot;          # Character classification and case conversion.
LC_NUMERIC=&amp;quot;en_US.utf8&amp;quot;        # Non-monetary numeric formats.
LC_TIME=&amp;quot;en_US.utf8&amp;quot;           # Date and time formats.
LC_COLLATE=&amp;quot;en_US.utf8&amp;quot;        # Collation order(알파벳 정렬과 관련된 규칙).
LC_MONETARY=&amp;quot;en_US.utf8&amp;quot;       # Monetary formats.
LC_MESSAGES=&amp;quot;en_US.utf8&amp;quot;       # Formats of informative and diagnostic messages and interactive responses.
LC_PAPER=&amp;quot;en_US.utf8&amp;quot;          # Paper size.
LC_NAME=&amp;quot;en_US.utf8&amp;quot;           # Name formats(이름 표기 형식. first name, last name).
LC_ADDRESS=&amp;quot;en_US.utf8&amp;quot;        # Address formats and location information.
LC_TELEPHONE=&amp;quot;en_US.utf8&amp;quot;      # Telephone number formats.
LC_MEASUREMENT=&amp;quot;en_US.utf8&amp;quot;    # Measurement units (Metric or Other).
LC_IDENTIFICATION=&amp;quot;en_US.utf8&amp;quot; # Metadata about the locale information.
LC_ALL=                        # LC_*의 값들이 override 된다.
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Tmux</title>
      <link>http://blog.kiyeon.net/2015/06/23/tmux/</link>
      <pubDate>Tue, 23 Jun 2015 17:22:51 +0900</pubDate>
      
      <guid>http://blog.kiyeon.net/2015/06/23/tmux/</guid>
      <description>  A tmux Crash Course  tmux manager  tmuxp Using Tmux and Tmuxinator http://zanshin.net/2014/07/02/using-teamocil-to-manage-tmux-sessions/ Using Tmux and Tmuxinator  </description>
    </item>
    
    <item>
      <title>ZSH</title>
      <link>http://blog.kiyeon.net/2015/06/23/zsh/</link>
      <pubDate>Tue, 23 Jun 2015 17:19:42 +0900</pubDate>
      
      <guid>http://blog.kiyeon.net/2015/06/23/zsh/</guid>
      <description> Z셸(Z shell, zsh)은 상호작용 로그인 셸이자 셸 스크립트를 위한 강력한 명령 줄 인터프리터로 사용할 수 있는 유닉스 셸이다. Zsh는 bash, ksh, tcsh의 일부 기능을 포함하여 수많은 개선 사항이 갖추어진 확장형 본 셸이다. - wiki
 기본적으로 역사가 오래된 bash는 대부분의 시스템에 기본적으로 설치가 되어있는 반면 zsh은 그렇지 않으므로 스스로 설치해야한다. 그래서 그런지 검색순위는 높지 않다j.
 공식사이트 http://www.zsh.org What are the best UNIX shells? Why Zsh is cooler than your shell My Extravagant Zsh Prompt A Beautifully Productive Terminal Experience Hey Prezto - Zsh for Command Line Heaven  </description>
    </item>
    
    <item>
      <title>Regular Expression</title>
      <link>http://blog.kiyeon.net/2015/06/23/regular-expression/</link>
      <pubDate>Tue, 23 Jun 2015 09:06:39 +0900</pubDate>
      
      <guid>http://blog.kiyeon.net/2015/06/23/regular-expression/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;정규 표현식(正規表現式, 영어: regular expression, 간단히 regexp 또는 regex)은 특정한 규칙을 가진 문자열의 집합을 표현하는 데 사용하는 형식 언어이다. 정규 표현식은 많은 텍스트 편집기와 프로그래밍 언어에서 문자열의 검색과 치환을 위해 지원하고 있으며, 특히 펄과 Tcl은 언어 자체에 강력한 정규 표현식을 구현하고 있다.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Curses Library</title>
      <link>http://blog.kiyeon.net/2015/06/19/curses-library/</link>
      <pubDate>Fri, 19 Jun 2015 11:10:32 +0900</pubDate>
      
      <guid>http://blog.kiyeon.net/2015/06/19/curses-library/</guid>
      <description>&lt;p&gt;콘솔을 좋아하는 이유? 심플하기때문에&amp;hellip; 가볍고 빠르고 어디서든 사용할 수 있다는점.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://ko.wikipedia.org/wiki/Curses&#34;&gt;curses&lt;/a&gt;는 유닉스 계열 운영체제를 위한 터미널 제어 라이브러리의 하나로, 텍스트 사용자 인터페이스(TUI) 응용 프로그램의 구성을 가능케 한다. 이 이름은 &amp;ldquo;커서 최적화&amp;rdquo;(cusor optimization)에서 따온 것이다. 문자 셀 터미널(VT100 따위) 상에서 응용 프로그램의 디스플레이를 관리하는 명령들이 모인 라이브러리이다. - wikipedia&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/1/11/Jack-curses-screen.gif&#34; alt=&#34;screenshot&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Windows Batch Scripting</title>
      <link>http://blog.kiyeon.net/2015/06/17/windows-batch-scripting/</link>
      <pubDate>Wed, 17 Jun 2015 09:42:37 +0900</pubDate>
      
      <guid>http://blog.kiyeon.net/2015/06/17/windows-batch-scripting/</guid>
      <description>&lt;p&gt;MS의 DOS로 시작해 Windows를 거쳐 유닉스와 리눅스를 만나고 이제는 유닉스(Mac)에 정착했다. 하지만 여전히 일선상에서는 Windows를 벗어나지 못하고 있다. 로컬OS는 Windows를 사용하지만 대부분 서비스를 이용하기위한(업무환경) 수단일뿐 실제 개발은 리눅스상에서 더 많이 한다. 좋든 실든 업무효율성을 높이기 위해 다양한 유틸리티와 Script가 필요하다.&lt;/p&gt;

&lt;p&gt;여러대의 서버로 파일을 업로드하는 간단한 스크립트를 살펴보며 Window Batch Script를 알아보자.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>History Command</title>
      <link>http://blog.kiyeon.net/2015/06/12/history-command/</link>
      <pubDate>Fri, 12 Jun 2015 11:35:51 +0900</pubDate>
      
      <guid>http://blog.kiyeon.net/2015/06/12/history-command/</guid>
      <description>&lt;p&gt;Command line에서 명령을 실행하면 해당 명령이 기록에 남는다. 이 기록을 살펴보는 명령이 &lt;code&gt;history&lt;/code&gt;다.&lt;/p&gt;

&lt;h1 id=&#34;설정&#34;&gt;설정&lt;/h1&gt;

&lt;p&gt;이 설정은 bash기준이며 다른 쉘에서는 약간 다를 수 있다.&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;export HISTTIMEFORMAT=&#39;%F %T &#39;              # 로그에 날짜와 시간 출력
export HISTIGNORE=&amp;quot;pwd:ls:ls -ltr:&amp;quot;         # pwd, ls, ls -ltr명령은 로그에 기록하지 않는다.
export HISTCONTROL=ignorespace              # 명령 실행시 처음 스페이스가 포함되면 로그에 기록하지 않는다.
export HISTCONTROL=ignoredups               # 명령이 중복되면 무시 (pwd를 연속으로 여러번 입력하면 로그에는 pwd하나만 기록된다)
export HISTCONTROL=erasedups                # 중복로그를 삭제하고 최근로그만 남긴다.
export HISTSIZE=450                         # 저장할 로그 개수 지정 (0을 지정하면 history 기능이 disable된다)
export HISTFILESIZE=450                     # 저장할 로그 개수 지정
export HISTFILE=/root/.commandline_warrior  # 히스토리 로그 파일 변경
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>VIM</title>
      <link>http://blog.kiyeon.net/2015/06/12/vim/</link>
      <pubDate>Fri, 12 Jun 2015 10:08:44 +0900</pubDate>
      
      <guid>http://blog.kiyeon.net/2015/06/12/vim/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Vim_(text_editor)&#34;&gt;VIM&lt;/a&gt;(Vi IMproved)은 Text Editor로 &lt;a href=&#34;https://en.wikipedia.org/wiki/Bill_Joy&#34;&gt;Bill Joy&lt;/a&gt;의 &lt;a href=&#34;https://en.wikipedia.org/wiki/Vi&#34;&gt;vi&lt;/a&gt;를 개선한 버전이다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;마우스 사용을 최소화하여 키보드로만 작업이 가능하고,&lt;/li&gt;
&lt;li&gt;프로그램이 작고 가볍고,&lt;/li&gt;
&lt;li&gt;그렇기에 웬만한 머신에는 &lt;a href=&#34;http://www.vim.org&#34;&gt;vim&lt;/a&gt; 또는 vi가 설치되어있어 쉽게 에디팅이 가능하기 때문이다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SSH Escape</title>
      <link>http://blog.kiyeon.net/2015/06/11/ssh-escape/</link>
      <pubDate>Thu, 11 Jun 2015 17:31:02 +0900</pubDate>
      
      <guid>http://blog.kiyeon.net/2015/06/11/ssh-escape/</guid>
      <description>&lt;p&gt;ssh접속중 탈출하고 싶다면 탈출키 &lt;code&gt;~&lt;/code&gt;를 사용한다.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>rotate nohup out file</title>
      <link>http://blog.kiyeon.net/2015/06/11/rotate-nohup-out-file/</link>
      <pubDate>Thu, 11 Jun 2015 09:07:45 +0900</pubDate>
      
      <guid>http://blog.kiyeon.net/2015/06/11/rotate-nohup-out-file/</guid>
      <description>&lt;p&gt;nohup은 터미널이 종료되어도 프로세스를 종료시키지 않고 동작시킬때 사용한다.&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:1&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;% nohup COMMAND        # nohup.out에 로그가 기록된다.
% nohup COMMAND &amp;gt; FILE # FILE에 로그가 기록된다.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;표준출력과 표준에러는 출력파일을 지정하지 않으면 디폴트로 nohup.out에 기록된다.&lt;/p&gt;

&lt;p&gt;로그파일을 지우면 프로세스는 출력파일을 잃게되고 프로세스를 재기동하지 않는 이상 로그를 볼 방법이 없다. 디버깅이 어려워지는 상황이 되는것이다. 물론 로그를 표준출력에 의지하지 않고 내부 로깅처리를 한다면야 상관없겠지만 간단한 스크립트에 그런 코드까지 추가한다는게 번거롭고 쉽지 않기도 하다.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>프로그래머를 위한 ack(like-grep)</title>
      <link>http://blog.kiyeon.net/2015/06/09/ack-like-grep-for-programmer/</link>
      <pubDate>Tue, 09 Jun 2015 10:27:57 +0900</pubDate>
      
      <guid>http://blog.kiyeon.net/2015/06/09/ack-like-grep-for-programmer/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://unixhelp.ed.ac.uk/CGI/man-cgi?grep&#34;&gt;grep&lt;/a&gt;은 텍스트에서 키워드를 찾아내는 툴이다. 다음과 같이 사용한다.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;% lsb_release --all | grep -i desc
Description:    Ubuntu 14.04.2 LTS
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;데이터가 많으면 해당 키워드를 찾기가 힘든데 이때 컬러옵션&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:grep-color&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:grep-color&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;을 사용할 수 있다.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;% cat /etc/services | grep --color=auto -i http
# Updated from http://www.iana.org/assignments/port-numbers and other
# sources like http://www.freebsd.org/cgi/cvsweb.cgi/src/etc/services .
http            80/tcp          www             # WorldWideWeb HTTP
http            80/udp                          # HyperText Transfer Protocol
https           443/tcp                         # http protocol over TLS/SSL
https           443/udp
http-alt        8080/tcp        webcache        # WWW caching service
http-alt        8080/udp
hkp             11371/tcp                       # OpenPGP HTTP Keyserver
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>리눅스 패키지 관리(Linux Package Management)</title>
      <link>http://blog.kiyeon.net/2015/06/04/linux-package-management/</link>
      <pubDate>Thu, 04 Jun 2015 10:01:51 +0900</pubDate>
      
      <guid>http://blog.kiyeon.net/2015/06/04/linux-package-management/</guid>
      <description>&lt;p&gt;e눅스에서 프로그램을 설치하는 방법은 2가지가 있다.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;소스코드를 직접 컴파일하여 설치하는 방법&lt;/li&gt;
&lt;li&gt;각 배포판에서 제공하는 패키지 매니저를 통해 설치하는 방법&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>*nix Timezone 변경하기(Changing the timezone in *nix)</title>
      <link>http://blog.kiyeon.net/2015/06/04/changing-the-timezone-in-star-nix/</link>
      <pubDate>Thu, 04 Jun 2015 09:25:19 +0900</pubDate>
      
      <guid>http://blog.kiyeon.net/2015/06/04/changing-the-timezone-in-star-nix/</guid>
      <description> *nix시스템의 시간대를 변경해보자.
References  Changing the timezone, date, and time 협정 세계시 그리니치 평균시 한국 표준시 - UTC보다 9시간 빠른 동경 135도를 기준 Standard time zones of the world Greenwich Mean Time 우분투 NTP 시간동기화  </description>
    </item>
    
    <item>
      <title>GIT</title>
      <link>http://blog.kiyeon.net/2015/06/03/git/</link>
      <pubDate>Wed, 03 Jun 2015 12:50:26 +0900</pubDate>
      
      <guid>http://blog.kiyeon.net/2015/06/03/git/</guid>
      <description> Git .gitignore로 관리되던 파일 제거하려면
git rm -r --cached .
서브모듈 삭제하기 Git - 수정한 것 되돌리기
상황별 Tip Pull하기전 변경사항을 보고 싶을때 SVN에서는 Incoming을 통해 누가 어떤 코드를 수정했는지 쉽게 파악이 가능했다. 그렇다면 Git에서는 어떻게 확인할까?
pull을 하면 변경된 모든사항에 바로 로컬 저장소에 반영이 된다.
$ git pull  fetch를 하면
https://stackoverflow.com/a/1331753
fetch한 내용 확인하기
$ git log origin/master  References  Pro Git - git-scm.com에서 제공하는 Git Book Getting Git Right - Git Tutorials git ready - 상황별 Tip Why Git is Better than X - Git이 다른 VCS보다 좋은 이유  </description>
    </item>
    
    <item>
      <title>Octopress Start</title>
      <link>http://blog.kiyeon.net/2015/05/26/octopress-and-start/</link>
      <pubDate>Tue, 26 May 2015 20:39:26 +0900</pubDate>
      
      <guid>http://blog.kiyeon.net/2015/05/26/octopress-and-start/</guid>
      <description>&lt;h1 id=&#34;intro&#34;&gt;Intro&lt;/h1&gt;

&lt;p&gt;세상에는 매우 다양한 CMS&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:cms&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:cms&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;가 있다.&lt;br /&gt;
인터넷이 국내에 막 대중에게 보급되기 시작한 1999년부터 지금(2015년)까지 블로깅을 하기위해 다양한 시도를 해봤다. 정적페이지에 직접 C로 작성한 CGI를 이용해 방명록과 게시판을 달아보기도 했고&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:cgi&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:cgi&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; PHP로 사용자인증을 적용한 게시판을 만들어 사용해보기도 했다.  당시엔 직접만들어 쓰거나 아니면 누군가 만들어 놓은 CMS를 이용하기도 했는데 그땐 그런 툴이 몇 안되었기 때문에 선택이 쉬웠다. 사용하는 언어도 C, PHP, JAVA, JSP정도였고 DB도 Oracle아니면 MySQL정도였다.  운동도 보는것보다는 직접하는걸 더 좋아하는데 이런 성향은 개발에서도 나타난다. 누군가 만든걸 가져다 쓰는것보다는 직접 만들어 쓰는걸 더 선호한다.&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:preference&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:preference&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>